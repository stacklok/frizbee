name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: setup go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version-file: ./go.mod

      - name: setup task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      # Builds the binary into the bin/ directory
      - name: build
        run: |-
          task build

      - name: upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: frizbee
          path: bin/frizbee

  cover:
    name: Coverage
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version-file: 'go.mod'

      - name: setup task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run coverage
        run: task cover

      # Using gcov didn't seem to work for the coveralls app, so we convert it to lcov
      - name: Try converting to LCOV
        run: go run github.com/jandelgado/gcov2lcov@latest -infile=./coverage.out -outfile=./coverage.lcov

      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # v2.3.6

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: setup go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version-file: ./go.mod

      - name: golangci-lint
        uses: golangci/golangci-lint-action@3a919529898de77ec3da873e3063ca4b10e7f5cc # v3

  test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: setup go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version-file: ./go.mod

      - name: setup task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: test
        run: |-
          task test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Checks that the github workflows are valid using this same tool
  frizbee:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: download artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: frizbee
          path: bin/

      - name: Make frizbee executable
        run: |-
          chmod +x bin/frizbee

      - name: Frizbee
        run: |-
          bin/frizbee actions --dry-run --error
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
